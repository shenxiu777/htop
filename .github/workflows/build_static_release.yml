name: Build Static Release

on:
  push:
    tags:
      - "*"

env:
  CPPFLAGS: -DGCC_PRINTF -DGCC_SCANF -D_FORTIFY_SOURCE=2

jobs:
  build-ubuntu-latest-gcc-static:
    runs-on: ubuntu-20.04
    env:
      CFLAGS: -O3 -g -flto
      LDFLAGS: -O3 -g -flto
    steps:
      - uses: actions/checkout@v4

      - name: Install Dependencies
        run: sudo apt-get install --no-install-recommends libncursesw5-dev libtinfo-dev libgpm-dev libsensors4-dev libcap-dev

      - name: Bootstrap
        run: ./autogen.sh

      - name: Configure
        run: ./configure --enable-static --enable-werror --enable-openvz --enable-vserver --enable-ancient-vserver --enable-unicode --disable-hwloc --disable-delayacct --enable-sensors --enable-capabilities || ( cat config.log; exit 1; )

      - name: Build
        run: make -k

      - name: Distcheck
        run: make distcheck DISTCHECK_CONFIGURE_FLAGS='--enable-static --enable-werror --enable-openvz --enable-vserver --enable-ancient-vserver --enable-unicode --disable-hwloc --disable-delayacct --enable-sensors --enable-capabilities'

      - name: Get Version
        id: get_version
        run: echo "::set-output name=version::$(echo $GITHUB_REF_NAME | cut -d'_' -f1)"

      - name: Create Release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          artifacts: htop
          name: ${{ steps.get_version.outputs.version }}
